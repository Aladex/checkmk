properties([
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '7', numToKeepStr: '14')),
])

def NODE = ''
withFolderProperties{
    NODE = env.BUILD_NODE
}

properties([
  buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '7', numToKeepStr: '14')),
  parameters([
    string(name: 'EDITION', defaultValue: 'enterprise', description: 'Edition: raw, enterprise or managed' ),
    string(name: 'VERSION', defaultValue: 'daily', description: 'Version: "daily" builds current git state of the branch. You also can specify a git tag here.' ),
  ])
])

timeout(time: 12, unit: 'HOURS') {
    node (NODE) {
        stage('checkout sources') {
            checkout(scm)
            notify = load 'buildscripts/scripts/lib/notify.groovy'
            versioning = load 'buildscripts/scripts/lib/versioning.groovy'
        }
    }
    
    try {
        node (NODE) {
            stage('test cmk-docker integration') {
                withCredentials([usernameColonPassword(credentialsId: 'cmk-credentials', variable: 'CMK_CREDENTIALS')]) {
                    sh """
                        mkdir -p /home/jenkins/
                        echo "${CMK_CREDENTIALS}" > /home/jenkins/.cmk-credentials
                    """
                }
                dir ('tests') {
                    def CMK_VERSION = versioning.get_cmk_version(scm, params.VERSION)
                    sh "make test-docker EDITION='$EDITION' VERSION='$CMK_VERSION'"
                }
            }
        }
    } catch(Exception e) {
        notify.notify_error(e)
    }
}
