#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

import typing

factory_settings["allocated_pools_percentage_upper"] = (80.0, 90.0)


class SansymphonyPool(typing.NamedTuple):
    name: str
    percent_allocated: float
    status: str
    cache_mode: str
    pool_type: str


Section = typing.Mapping[str, SansymphonyPool]


def parse_sansymphony_pool(string_table) -> Section:
    return {
        name: SansymphonyPool(
            name=name,
            percent_allocated=float(percent_allocated),
            status=status,
            cache_mode=cache_mode,
            pool_type=type_,
        )
        for name, percent_allocated, status, cache_mode, type_ in string_table
    }


def discover_sansymphony_pool(section: Section):
    yield from ((item, {}) for item in section)


def check_sansymphony_pool(
    item: str,
    params: typing.Mapping[str, typing.Any],
    section: Section,
):
    if (pool := section.get(item)) is None:
        return

    if pool.status == "Running" and pool.cache_mode == "ReadWrite":
        state = 0
    elif pool.status == "Running" and pool.cache_mode != "ReadWrite":
        state = 1
    else:
        state = 2
    yield state, f"{pool.pool_type} pool {pool.name} is {pool.status}, its cache is in {pool.cache_mode} mode"

    yield check_levels(
        value=pool.percent_allocated,
        dsname="pool_allocation",
        params=params["allocated_pools_percentage_upper"],
        human_readable_func=get_percent_human_readable,
        infoname="Pool allocation",
    )


check_info["sansymphony_pool"] = {
    "parse_function": parse_sansymphony_pool,
    "check_function": check_sansymphony_pool,
    "inventory_function": discover_sansymphony_pool,
    "service_description": "sansymphony Pool %s",
    "has_perfdata": True,
    "group": "sansymphony_pool",
}
