#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from typing import Any, Mapping

from cmk.base.check_legacy_includes.uptime import check_uptime_seconds
from cmk.base.plugins.agent_based.agent_based_api.v1.type_defs import StringTable
from cmk.base.plugins.agent_based.utils import uptime

Section = Mapping[str, uptime.Section]


def parse_couchbase_uptime(string_table: StringTable) -> Section:
    parsed = {}
    for line in string_table:
        if len(line) < 2:
            continue
        uptime_value, node = line[0], " ".join(line[1:])
        try:
            parsed[node] = uptime.Section(float(uptime_value), None)
        except ValueError:
            continue
    return parsed


def discover_couchbase_nodes_uptime(section: Section):
    yield from ((item, {}) for item in section)


def check_couchbase_nodes_uptime(item: str, params: Mapping[str, Any], section: Section):
    if (uptime_section := section.get(item)) is None:
        return
    yield check_uptime_seconds(params, uptime_section.uptime_sec)


check_info["couchbase_nodes_uptime"] = {
    "parse_function": parse_couchbase_uptime,
    "inventory_function": discover_couchbase_nodes_uptime,
    "check_function": check_couchbase_nodes_uptime,
    "service_description": "Couchbase %s Uptime",
    "group": "uptime_multiitem",
    "has_perfdata": True,
}
