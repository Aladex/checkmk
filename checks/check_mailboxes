#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.


def check_mailboxes_arguments(params):
    fetch_params = params["imap_parameters"]
    args = [
        f"--fetch-server={fetch_params.get('server', '$HOSTADDRESS$')}",
    ]

    fetch_use_ssl, fetch_port = fetch_params["ssl"]
    if fetch_use_ssl:
        args.append("--fetch-tls")

    if fetch_port is not None:
        args.append(f"--fetch-port={fetch_port}")

    username, password = fetch_params["auth"]
    args.append(f"--fetch-username={username}")
    args.append(passwordstore_get_cmdline("--fetch-password=%s", password))

    if "connect_timeout" in params:
        args.append(f"--connect-timeout={params['connect_timeout']}")

    if "retrieve_max" in params:
        args.append(f"--retrieve-max={params['retrieve_max']}")

    if "age" in params:
        warn, crit = params["age"]
        args += [f"--warn-age-oldest={warn}", f"--crit-age-oldest={crit}"]

    if "age_newest" in params:
        warn, crit = params["age_newest"]
        args += [f"--warn-age-newest={warn}", f"--crit-age-newest={crit}"]

    if "count" in params:
        warn, crit = params["count"]
        args += [f"--warn-count={warn}", f"--crit-count={crit}"]

    for mb in params.get("mailboxes", []):
        args.append(f"--mailbox={mb}")

    return args


active_check_info["mailboxes"] = {
    "command_line": "check_mailboxes $ARG1$",
    "argument_function": check_mailboxes_arguments,
    "service_description": lambda params: params["service_description"],
    "has_perfdata": True,
}
