#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from typing import Any, Iterable, Mapping

from cmk.base.check_legacy_includes.df import df_check_filesystem_single, filesystem_groups
from cmk.base.plugins.agent_based.agent_based_api.v1.type_defs import StringTable
from cmk.base.plugins.agent_based.utils.df import df_discovery, FILESYSTEM_DEFAULT_PARAMS, FSBlock

DiscoveryResult = Iterable[tuple]
CheckResult = Iterable[tuple] | None

Section = Mapping[str, FSBlock]

# Example output from agent:
# <<<vms_diskstat>>>
# $1$DGA1122: TEST_WORK 1171743836 1102431184 0.00
# DSA1: SHAD_1 66048000 58815666 0.00
# DSA2: SHAD_2 66048000 47101824 0.07
# DSA3: SHAD_3 66048000 46137546 1.57
# DSA4: SHAD_4 66048000 36087093 0.00
# DSA5: SHAD_5 66048000 32449914 0.00
# $1$DGA1123: TEST_WORK 2171743836 1102431184 0.00
# $1$DGA1124: TEMP_02 3171743836 102431184 1.10
# $1$DGA1125: DATA_01 1171743836 202431184 0.20


def _mb(raw: str) -> float:
    return int(raw) * 512 / (1024.0 * 1024.0)


def parse_vms_diskstat(string_table: StringTable) -> Section:
    return {
        label: (label, _mb(size), _mb(avail), 0)
        # Note that items can repeat, as seen in the output above.
        # Prior to this refactoring, the check function picked the first occurring item.
        # We stick to that for now, hence the "reversed".
        # I'm not sure it makes sense :-(
        for _device, label, size, avail, _ios in reversed(string_table)
    }


check_info["vms_diskstat"] = {
    "parse_function": parse_vms_diskstat,
}


def discover_vms_diskstat_df(section: Section) -> DiscoveryResult:
    params = host_extra_conf(host_name(), filesystem_groups)
    return df_discovery(params, section)


def check_vms_diskstat_df(item: str, params: Mapping[str, Any], section: Section) -> CheckResult:
    if (volume := section.get(item)) is None:
        return None
    return df_check_filesystem_single(*volume, None, None, params)


check_info["vms_diskstat.df"] = {
    "check_function": check_vms_diskstat_df,
    "inventory_function": discover_vms_diskstat_df,
    "service_description": "Filesystem %s",
    "has_perfdata": True,
    "group": "filesystem",
    "default_levels_variable": "filesystem_default_levels",
}

factory_settings["filesystem_default_levels"] = FILESYSTEM_DEFAULT_PARAMS
