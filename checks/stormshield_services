#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

from typing import List, Mapping, NamedTuple

from cmk.base.check_legacy_includes.stormshield import stormshield_scan_function

_SERVICE_STATE_MAP = {"0": "down", "1": "up"}


class StormshieldService(NamedTuple):
    state: str
    uptime: int


Section = Mapping[str, StormshieldService]


def parse_stormshield_services(string_table: List[List[str]]) -> Section:
    section = {}
    for name, state, r_uptime in string_table:
        try:
            uptime = int(r_uptime)
        except ValueError:
            uptime = 0

        section[name] = StormshieldService(state, uptime)

    return section


def discover_stormshield_services(section: Section):
    yield from ((name, {}) for name, service in section.items() if service.state == "1")


def check_stormshield_services(item: str, _no_params, section: Section):
    service = section.get(item)
    if service is None:
        return

    state_label = _SERVICE_STATE_MAP[service.state]
    yield int(state_label == "down"), state_label.title()

    if state_label == "down":
        return

    yield check_levels(
        service.uptime,
        "uptime",
        None,
        human_readable_func=get_age_human_readable,
        infoname="Uptime",
    )


check_info["stormshield_services"] = {
    "parse_function": parse_stormshield_services,
    "inventory_function": discover_stormshield_services,
    "check_function": check_stormshield_services,
    "service_description": "Service %s",
    "has_perfdata": True,
    "snmp_info": (
        ".1.3.6.1.4.1.11256.1.7.1.1",
        ["2", "3", "4"],  # snsServicesName  # snsServicesState  # snsServicesUptime
    ),
    "snmp_scan_function": stormshield_scan_function,
}
