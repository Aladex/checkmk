#!/usr/bin/env python3
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.aws import *  # pylint: disable=wildcard-import,unused-wildcard-import

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.cpu_util import *  # pylint: disable=wildcard-import,unused-wildcard-import

# NOTE: Careful when replacing the *-import below with a more specific import. This can cause
# problems because it might remove variables needed for accessing discovery rulesets.
from cmk.base.check_legacy_includes.diskstat import *  # pylint: disable=wildcard-import,unused-wildcard-import

# .
#   .--replica lag---------------------------------------------------------.
#   |                           _ _             _                          |
#   |            _ __ ___ _ __ | (_) ___ __ _  | | __ _  __ _              |
#   |           | '__/ _ \ '_ \| | |/ __/ _` | | |/ _` |/ _` |             |
#   |           | | |  __/ |_) | | | (_| (_| | | | (_| | (_| |             |
#   |           |_|  \___| .__/|_|_|\___\__,_| |_|\__,_|\__, |             |
#   |                    |_|                            |___/              |
#   '----------------------------------------------------------------------'
Section = Mapping[str, Mapping[str, float]]


def discover_aws_rds_replica_lag(section: Section):
    yield from inventory_aws_generic(
        section,
        ["ReplicaLag"],
    )


def check_aws_rds_replica_lag(item: str, params: Mapping[str, Any], section: Section):
    if (metrics := section.get(item)) is None:
        return

    yield check_levels(
        metrics["ReplicaLag"],
        "aws_rds_replica_lag",
        params.get("lag_levels"),
        human_readable_func=get_age_human_readable,
        infoname="Lag",
    )

    if (oldest_replica_lag_space := metrics.get("OldestReplicationSlotLag")) is not None:
        yield check_levels(
            oldest_replica_lag_space,
            "aws_rds_oldest_replication_slot_lag",
            params.get(
                "slot_levels",
            ),
            human_readable_func=get_bytes_human_readable,
            infoname="Oldest replication slot lag",
        )


check_info["aws_rds.replica_lag"] = {
    # section already migrated!
    "inventory_function": discover_aws_rds_replica_lag,
    "check_function": check_aws_rds_replica_lag,
    "service_description": "AWS/RDS %s Replica Lag",
    "has_perfdata": True,
    "group": "aws_rds_replica_lag",
}
