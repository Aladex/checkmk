#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Copyright (C) 2019 tribe29 GmbH - License: GNU General Public License v2
# This file is part of Checkmk (https://checkmk.com). It is subject to the terms and
# conditions defined in the file COPYING, which is part of this source code package.

import pytest

from tests.testlib import Check

pytestmark = pytest.mark.checks

SECTION = {
    "ipv6.google.com": {
        "hopcount": 0,
        "hops": {},
        "hostname": "ipv6.google.com",
        "last_check": "1550068434",
    },
    "mathias-kettner.de": {
        "hopcount": 6,
        "hops": {
            1: {
                "hopname": "1.2.3.4",
                "pl": "0.0",
                "response_time": "1.3",
                "rta": "2.2",
                "rtmax": "7.0",
                "rtmin": "1.2",
                "rtstddev": "1.6",
                "snt": "10"
            },
            2: {
                "hopname": "232.142.105.70",
                "pl": "0.0",
                "response_time": "1.8",
                "rta": "2.7",
                "rtmax": "4.4",
                "rtmin": "1.5",
                "rtstddev": "1.1",
                "snt": "10"
            },
            3: {
                "hopname": "146.26.170.63",
                "pl": "0.0",
                "response_time": "17.0",
                "rta": "16.8",
                "rtmax": "19.9",
                "rtmin": "14.5",
                "rtstddev": "1.2",
                "snt": "10"
            },
            4: {
                "hopname": "195.164.42.167",
                "pl": "0.0",
                "response_time": "17.2",
                "rta": "18.4",
                "rtmax": "25.4",
                "rtmin": "15.5",
                "rtstddev": "2.7",
                "snt": "10"
            },
            5: {
                "hopname": "145.111.28.11",
                "pl": "0.0",
                "response_time": "21.2",
                "rta": "19.6",
                "rtmax": "29.8",
                "rtmin": "16.2",
                "rtstddev": "4.1",
                "snt": "10"
            },
            6: {
                "hopname": "98.216.107.58",
                "pl": "0.0",
                "response_time": "55.4",
                "rta": "53.3",
                "rtmax": "128.1",
                "rtmin": "28.1",
                "rtstddev": "28.1",
                "snt": "10"
            },
        },
        "hostname": "mathias-kettner.de",
        "last_check": "1550068434",
    },
    "www.google.com": {
        "hopcount": 11,
        "hops": {
            1: {
                "hopname": "1.2.3.4",
                "pl": "0.0",
                "response_time": "1.4",
                "rta": "1.6",
                "rtmax": "2.2",
                "rtmin": "1.4",
                "rtstddev": "0.0",
                "snt": "10"
            },
            2: {
                "hopname": "232.142.105.70",
                "pl": "0.0",
                "response_time": "16.5",
                "rta": "17.9",
                "rtmax": "27.0",
                "rtmin": "3.5",
                "rtstddev": "6.5",
                "snt": "10"
            },
            3: {
                "hopname": "ae0.rt-inxs-1.m-online.net",
                "pl": "0.0",
                "response_time": "15.6",
                "rta": "18.4",
                "rtmax": "25.2",
                "rtmin": "14.9",
                "rtstddev": "3.3",
                "snt": "10"
            },
            4: {
                "hopname": "whatever",
                "pl": "0.0",
                "response_time": "15.3",
                "rta": "19.1",
                "rtmax": "32.3",
                "rtmin": "14.5",
                "rtstddev": "5.2",
                "snt": "10"
            },
            5: {
                "hopname": "210.233.222.159",
                "pl": "0.0",
                "response_time": "15.6",
                "rta": "18.7",
                "rtmax": "21.1",
                "rtmin": "15.6",
                "rtstddev": "1.8",
                "snt": "10"
            },
            6: {
                "hopname": "9.32.75.54",
                "pl": "0.0",
                "response_time": "19.0",
                "rta": "20.3",
                "rtmax": "30.3",
                "rtmin": "14.9",
                "rtstddev": "4.8",
                "snt": "10"
            },
            7: {
                "hopname": "7.69.211.19",
                "pl": "0.0",
                "response_time": "24.7",
                "rta": "27.8",
                "rtmax": "43.2",
                "rtmin": "23.4",
                "rtstddev": "5.8",
                "snt": "10"
            },
            8: {
                "hopname": "145.80.196.60",
                "pl": "0.0",
                "response_time": "25.5",
                "rta": "24.7",
                "rtmax": "26.3",
                "rtmin": "22.2",
                "rtstddev": "0.9",
                "snt": "10"
            },
            9: {
                "hopname": "0.253.40.93",
                "pl": "0.0",
                "response_time": "23.9",
                "rta": "22.9",
                "rtmax": "23.9",
                "rtmin": "21.2",
                "rtstddev": "0.7",
                "snt": "10"
            },
            10: {
                "hopname": "85.26.182.623",
                "pl": "0.0",
                "response_time": "23.7",
                "rta": "24.0",
                "rtmax": "27.1",
                "rtmin": "20.2",
                "rtstddev": "2.2",
                "snt": "10"
            },
            11: {
                "hopname": "last-host.net",
                "pl": "0.0",
                "response_time": "23.4",
                "rta": "23.6",
                "rtmax": "26.6",
                "rtmin": "21.5",
                "rtstddev": "1.5",
                "snt": "10"
            },
        },
        "hostname": "www.google.com",
        "last_check": "1550068434",
    },
}


def test_parse_mtr() -> None:
    assert Check("mtr").run_parse([
        [
            "www.google.com", "1550068434", "11", "1.2.3.4", "0.0%", "10", "1.4", "1.6", "1.4",
            "2.2", "0.0", "232.142.105.70", "0.0%", "10", "16.5", "17.9", "3.5", "27.0", "6.5",
            "ae0.rt-inxs-1.m-online.net", "0.0%", "10", "15.6", "18.4", "14.9", "25.2", "3.3",
            "whatever", "0.0%", "10", "15.3", "19.1", "14.5", "32.3", "5.2", "210.233.222.159",
            "0.0%", "10", "15.6", "18.7", "15.6", "21.1", "1.8", "9.32.75.54", "0.0%", "10", "19.0",
            "20.3", "14.9", "30.3", "4.8", "7.69.211.19", "0.0%", "10", "24.7", "27.8", "23.4",
            "43.2", "5.8", "145.80.196.60", "0.0%", "10", "25.5", "24.7", "22.2", "26.3", "0.9",
            "0.253.40.93", "0.0%", "10", "23.9", "22.9", "21.2", "23.9", "0.7", "85.26.182.623",
            "0.0%", "10", "23.7", "24.0", "20.2", "27.1", "2.2", "last-host.net", "0.0%", "10",
            "23.4", "23.6", "21.5", "26.6", "1.5"
        ],
        ["ipv6.google.com", "1550068434", "0"],
        [
            "mathias-kettner.de", "1550068434", "6", "1.2.3.4", "0.0%", "10", "1.3", "2.2", "1.2",
            "7.0", "1.6", "232.142.105.70", "0.0%", "10", "1.8", "2.7", "1.5", "4.4", "1.1",
            "146.26.170.63", "0.0%", "10", "17.0", "16.8", "14.5", "19.9", "1.2", "195.164.42.167",
            "0.0%", "10", "17.2", "18.4", "15.5", "25.4", "2.7", "145.111.28.11", "0.0%", "10",
            "21.2", "19.6", "16.2", "29.8", "4.1", "98.216.107.58", "0.0%", "10", "55.4", "53.3",
            "28.1", "128.1", "28.1"
        ],
    ]) == SECTION


def test_discover_mtr() -> None:
    assert list(Check("mtr").run_discovery(SECTION)) == [
        ("ipv6.google.com", {}),
        ("mathias-kettner.de", {}),
        ("www.google.com", {}),
    ]


@pytest.mark.parametrize(
    "item, params, check_result",
    [
        pytest.param(
            "mathias-kettner.de",
            {
                "pl": (10, 25),
                "rta": (150, 250),
                "rtstddev": (150, 250),
            },
            [
                (
                    0,
                    "Number of Hops: 6",
                    [
                        ("hops", 6),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_4_rta", 0.0184, None, None),
                        ("hop_4_rtmin", 0.0155),
                        ("hop_4_rtmax", 0.0254),
                        ("hop_4_rtstddev", 0.0027, None, None),
                        ("hop_4_response_time", 0.0172),
                        ("hop_4_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_4_rta", 0.0184, None, None),
                        ("hop_4_rtmin", 0.0155),
                        ("hop_4_rtmax", 0.0254),
                        ("hop_4_rtstddev", 0.0027, None, None),
                        ("hop_4_response_time", 0.0172),
                        ("hop_4_pl", 0.0, None, None),
                        ("hop_5_rta", 0.019600000000000003, None, None),
                        ("hop_5_rtmin", 0.0162),
                        ("hop_5_rtmax", 0.0298),
                        ("hop_5_rtstddev", 0.0040999999999999995, None, None),
                        ("hop_5_response_time", 0.0212),
                        ("hop_5_pl", 0.0, None, None),
                    ],
                ),
                (
                    0,
                    "Packet loss 0.0%, Round trip average 53.3ms, Standard deviation 28.1ms\r\n"
                    "Hops in last check:\n"
                    "Hop 1: 1.2.3.4\n"
                    "Hop 2: 232.142.105.70\n"
                    "Hop 3: 146.26.170.63\n"
                    "Hop 4: 195.164.42.167\n"
                    "Hop 5: 145.111.28.11\n"
                    "Hop 6: 98.216.107.58\n",
                    [
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_4_rta", 0.0184, None, None),
                        ("hop_4_rtmin", 0.0155),
                        ("hop_4_rtmax", 0.0254),
                        ("hop_4_rtstddev", 0.0027, None, None),
                        ("hop_4_response_time", 0.0172),
                        ("hop_4_pl", 0.0, None, None),
                        ("hop_5_rta", 0.019600000000000003, None, None),
                        ("hop_5_rtmin", 0.0162),
                        ("hop_5_rtmax", 0.0298),
                        ("hop_5_rtstddev", 0.0040999999999999995, None, None),
                        ("hop_5_response_time", 0.0212),
                        ("hop_5_pl", 0.0, None, None),
                        ("hop_6_rta", 0.0533, 0.15, 0.25),
                        ("hop_6_rtmin", 0.0281),
                        ("hop_6_rtmax", 0.1281),
                        ("hop_6_rtstddev", 0.0281, 0.15, 0.25),
                        ("hop_6_response_time", 0.0554),
                        ("hop_6_pl", 0.0, 10, 25),
                    ],
                ),
            ],
            id="normal case",
        ),
        pytest.param(
            "mathias-kettner.de",
            {
                "pl": (0, 1),
                "rta": (0, 1),
                "rtstddev": (0, 1),
            },
            [
                (
                    0,
                    "Number of Hops: 6",
                    [
                        ("hops", 6),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_4_rta", 0.0184, None, None),
                        ("hop_4_rtmin", 0.0155),
                        ("hop_4_rtmax", 0.0254),
                        ("hop_4_rtstddev", 0.0027, None, None),
                        ("hop_4_response_time", 0.0172),
                        ("hop_4_pl", 0.0, None, None),
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_4_rta", 0.0184, None, None),
                        ("hop_4_rtmin", 0.0155),
                        ("hop_4_rtmax", 0.0254),
                        ("hop_4_rtstddev", 0.0027, None, None),
                        ("hop_4_response_time", 0.0172),
                        ("hop_4_pl", 0.0, None, None),
                        ("hop_5_rta", 0.019600000000000003, None, None),
                        ("hop_5_rtmin", 0.0162),
                        ("hop_5_rtmax", 0.0298),
                        ("hop_5_rtstddev", 0.0040999999999999995, None, None),
                        ("hop_5_response_time", 0.0212),
                        ("hop_5_pl", 0.0, None, None),
                    ],
                ),
                (
                    2,
                    "Packet loss 0.0%(!) (warn/crit at 0%/1%), Round trip average 53.3ms(!!) "
                    "(warn/crit at 0ms/1ms), Standard deviation 28.1ms(!!) (warn/crit at "
                    "0ms/1ms)\r\n"
                    "Hops in last check:\n"
                    "Hop 1: 1.2.3.4\n"
                    "Hop 2: 232.142.105.70\n"
                    "Hop 3: 146.26.170.63\n"
                    "Hop 4: 195.164.42.167\n"
                    "Hop 5: 145.111.28.11\n"
                    "Hop 6: 98.216.107.58\n",
                    [
                        ("hop_1_rta", 0.0022, None, None),
                        ("hop_1_rtmin", 0.0012),
                        ("hop_1_rtmax", 0.007),
                        ("hop_1_rtstddev", 0.0016, None, None),
                        ("hop_1_response_time", 0.0013),
                        ("hop_1_pl", 0.0, None, None),
                        ("hop_2_rta", 0.0027, None, None),
                        ("hop_2_rtmin", 0.0015),
                        ("hop_2_rtmax", 0.0044),
                        ("hop_2_rtstddev", 0.0011, None, None),
                        ("hop_2_response_time", 0.0018),
                        ("hop_2_pl", 0.0, None, None),
                        ("hop_3_rta", 0.016800000000000002, None, None),
                        ("hop_3_rtmin", 0.0145),
                        ("hop_3_rtmax", 0.019899999999999998),
                        ("hop_3_rtstddev", 0.0012, None, None),
                        ("hop_3_response_time", 0.017),
                        ("hop_3_pl", 0.0, None, None),
                        ("hop_4_rta", 0.0184, None, None),
                        ("hop_4_rtmin", 0.0155),
                        ("hop_4_rtmax", 0.0254),
                        ("hop_4_rtstddev", 0.0027, None, None),
                        ("hop_4_response_time", 0.0172),
                        ("hop_4_pl", 0.0, None, None),
                        ("hop_5_rta", 0.019600000000000003, None, None),
                        ("hop_5_rtmin", 0.0162),
                        ("hop_5_rtmax", 0.0298),
                        ("hop_5_rtstddev", 0.0040999999999999995, None, None),
                        ("hop_5_response_time", 0.0212),
                        ("hop_5_pl", 0.0, None, None),
                        ("hop_6_rta", 0.0533, 0, 0.001),
                        ("hop_6_rtmin", 0.0281),
                        ("hop_6_rtmax", 0.1281),
                        ("hop_6_rtstddev", 0.0281, 0, 0.001),
                        ("hop_6_response_time", 0.0554),
                        ("hop_6_pl", 0.0, 0, 1),
                    ],
                ),
            ],
            id="normal case with low levels",
        ),
        pytest.param(
            "ipv6.google.com",
            {
                "pl": (10, 25),
                "rta": (150, 250),
                "rtstddev": (150, 250),
            },
            [(3, "Insufficient data: No hop information available")],
            id="no hops",
        ),
    ],
)
def test_check_mtr(
    item: str,
    params,
    check_result,
) -> None:
    assert list(Check("mtr").run_check(
        item,
        params,
        SECTION,
    )) == check_result
